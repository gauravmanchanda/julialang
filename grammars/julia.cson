[
  null
  {
    'fileTypes': [
      'jl'
    ]
    'firstLineMatch': '^#!.*\\bjulia\\s*$'
    'foldingStartMarker': '^\\s*(?:if|while|for|begin|function|macro|module|baremodule|type|immutable|let)\\b(?!.*\\bend\\b).*$'
    'foldingStopMarker': '^\\s*(?:end)\\b.*$'
    'name': 'Julia'
    'patterns': [
      {
        'include': '#bracket'
      }
      {
        'include': '#function_decl'
      }
      {
        'include': '#function_call'
      }
      {
        'include': '#type_decl'
      }
      {
        'include': '#keyword'
      }
      {
        'include': '#operator'
      }
      {
        'include': '#number'
      }
      {
        'include': '#string'
      }
      {
        'include': '#comment'
      }
    ]
    'repository':
      'bracket':
        'patterns': [
          {
            'match': '(?:\\(|\\)|\\[|\\]|\\{|\\}|,)(?!(\'|(?:\\.\'))*\\.?\')'
            'name': 'keyword.bracket.julia'
          }
        ]
      'comment':
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.julia'
            'match': '(?<!\\$)(#)(?!\\{).*$\\n?'
            'name': 'comment.line.number-sign.julia'
          }
        ]
      'function_call':
        'patterns': [
          {
            'begin': '([a-zA-Z0-9_]+!?)\\w*\\('
            'beginCaptures':
              '1':
                'name': 'support.function.julia'
            'end': '\\)((\'|(\\.\'))*\\.?\')?'
            'endCaptures':
              '1':
                'name': 'keyword.operator.transposed-func.julia'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
        ]
      'function_decl':
        'patterns': [
          {
            'begin': '(function|macro)\\s*([a-zA-Z0-9_\\{]+!?)\\w*([(\\\\{])'
            'beginCaptures':
              '1':
                'name': 'keyword.other.julia'
              '2':
                'name': 'entity.name.function.julia'
            'end': '([)\\\\}])'
            'name': 'meta.function.julia'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
        ]
      'keyword':
        'patterns': [
          {
            'match': '\\b(?:function|type|immutable|macro|quote|abstract|bitstype|typealias|module|baremodule|new)\\b'
            'name': 'keyword.other.julia'
          }
          {
            'match': '\\b(?:if|else|elseif|while|for|in|begin|let|end|do|try|catch|finally|return|break|continue)\\b'
            'name': 'keyword.control.julia'
          }
          {
            'match': '\\b(?:global|local|const|export|import|importall|using)\\b'
            'name': 'storage.modifier.variable.julia'
          }
          {
            'match': '@\\w+\\b'
            'name': 'variable.macro.julia'
          }
        ]
      'number':
        'patterns': [
          {
            'match': '((\\b0(x|X)[0-9a-fA-F]*)|((\\b[0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]*)?(im)?|\\bInf(32)?\\b|\\bNaN(32)?\\b|\\btrue\\b|\\bfalse\\b)'
            'name': 'constant.numeric.julia'
          }
        ]
      'operator':
        'patterns': [
          {
            'match': '(?:=|:=|\\+=|-=|\\*=|/=|//=|\\.//=|\\.\\*=|\\\\=|\\.\\\\=|^=|\\.^=|%=|\\|=|&=|\\$=|<<=|>>=)'
            'name': 'keyword.operator.update.julia'
          }
          {
            'match': '(?:\\?|:)'
            'name': 'keyword.operator.ternary.julia'
          }
          {
            'match': '(?:\\|\\||&&|!)'
            'name': 'keyword.operator.boolean.julia'
          }
          {
            'match': '(?:->|<-|-->)'
            'name': 'keyword.operator.arrow.julia'
          }
          {
            'match': '(?:>|<|>=|<=|==|!=|\\.>|\\.<|\\.>=|\\.>=|\\.==|\\.!=|\\.=|\\.!|<:|:>)'
            'name': 'keyword.operator.relation.julia'
          }
          {
            'match': '(?::)'
            'name': 'keyword.operator.range.julia'
          }
          {
            'match': '(?:<<|>>)'
            'name': 'keyword.operator.shift.julia'
          }
          {
            'match': '(?:\\||\\&|~)'
            'name': 'keyword.operator.bitwise.julia'
          }
          {
            'match': '(?:\\+|-|\\*|\\.\\*|/|\\./|//|\\.//|%|\\.%|\\\\|\\.\\\\|\\^|\\.\\^)'
            'name': 'keyword.operator.arithmetic.julia'
          }
          {
            'match': '(?:::)'
            'name': 'keyword.operator.isa.julia'
          }
          {
            'match': '(?:\\.(?=[a-zA-Z])|\\.\\.+)'
            'name': 'keyword.operator.dots.julia'
          }
          {
            'match': '(?:\\$(?=.+))'
            'name': 'keyword.operator.interpolation.julia'
          }
          {
            'captures':
              '1':
                'name': 'variable'
              '2':
                'name': 'keyword.operator.transposed-variable.julia'
            'match': '(\\w+)((\'|(\\.\'))*\\.?\')'
          }
          {
            'captures':
              '1':
                'name': 'keyword.bracket.end.julia'
              '2':
                'name': 'keyword.operator.transposed-matrix.julia'
            'match': '(\\])((?:\'|(?:\\.\'))*\\.?\')'
          }
          {
            'captures':
              '1':
                'name': 'keyword.bracket.end.julia'
              '2':
                'name': 'keyword.operator.transposed-parens.julia'
            'match': '(\\))((?:\'|(?:\\.\'))*\\.?\')'
          }
        ]
      'string':
        'patterns': [
          {
            'begin': '\''
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.begin.julia'
            'end': '\''
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.julia'
            'name': 'string.quoted.single.julia'
            'patterns': [
              {
                'include': '#string_escaped_char'
              }
            ]
          }
          {
            'begin': '"'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.begin.julia'
            'end': '"'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.julia'
            'name': 'string.quoted.double.julia'
            'patterns': [
              {
                'include': '#string_escaped_char'
              }
            ]
          }
          {
            'begin': '\\b\\w+"'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.begin.julia'
            'end': '"\\w*'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.julia'
            'name': 'string.quoted.custom-double.julia'
            'patterns': [
              {
                'include': '#string_custom_escaped_char'
              }
            ]
          }
          {
            'begin': '`'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.begin.julia'
            'end': '`'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.julia'
            'name': 'string.quoted.backtick.julia'
            'patterns': [
              {
                'include': '#string_escaped_char'
              }
            ]
          }
        ]
      'string_custom_escaped_char':
        'patterns': [
          {
            'match': '\\\\"'
            'name': 'constant.character.escape.julia'
          }
        ]
      'string_escaped_char':
        'patterns': [
          {
            'match': '\\\\(\\\\|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8}|.)'
            'name': 'constant.character.escape.julia'
          }
        ]
      'type_decl':
        'patterns': [
          {
            'captures':
              '1':
                'name': 'keyword.control.type.julia'
              '2':
                'name': 'entity.name.type.julia'
              '3':
                'name': 'entity.other.inherited-class.julia'
              '4':
                'name': 'punctuation.separator.inheritance.julia'
            'match': '(type|immutable)\\s+([a-zA-Z0-9_]+)(\\s*(<:)\\s*[.a-zA-Z0-9_:]+)?'
            'name': 'meta.type.julia'
          }
          {
            'captures':
              '2':
                'name': 'support.type.julia'
            'comments': 'Matches a typed variable, such as \'id::String\''
            'match': '([a-zA-Z0-9_]+)(::[a-zA-Z0-9_{}]+)'
            'name': 'other.typed-variable.julia'
          }
        ]
    'scopeName': 'source.julia'
    'uuid': 'F5D95417-DF9F-48AD-92DF-21CE62F7C31B'
  }
]
